// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/services/solarPanelDataService.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/loukaspe/solar-panel-data-crud/internal/core/domain"
)

// MockSolarPanelDataServiceInterface is a mock of SolarPanelDataServiceInterface interface.
type MockSolarPanelDataServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSolarPanelDataServiceInterfaceMockRecorder
}

// MockSolarPanelDataServiceInterfaceMockRecorder is the mock recorder for MockSolarPanelDataServiceInterface.
type MockSolarPanelDataServiceInterfaceMockRecorder struct {
	mock *MockSolarPanelDataServiceInterface
}

// NewMockSolarPanelDataServiceInterface creates a new mock instance.
func NewMockSolarPanelDataServiceInterface(ctrl *gomock.Controller) *MockSolarPanelDataServiceInterface {
	mock := &MockSolarPanelDataServiceInterface{ctrl: ctrl}
	mock.recorder = &MockSolarPanelDataServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSolarPanelDataServiceInterface) EXPECT() *MockSolarPanelDataServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateSolarPanelData mocks base method.
func (m *MockSolarPanelDataServiceInterface) CreateSolarPanelData(arg0 *domain.SolarPanelData) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSolarPanelData", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSolarPanelData indicates an expected call of CreateSolarPanelData.
func (mr *MockSolarPanelDataServiceInterfaceMockRecorder) CreateSolarPanelData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSolarPanelData", reflect.TypeOf((*MockSolarPanelDataServiceInterface)(nil).CreateSolarPanelData), arg0)
}

// DeleteSolarPanelData mocks base method.
func (m *MockSolarPanelDataServiceInterface) DeleteSolarPanelData(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSolarPanelData", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSolarPanelData indicates an expected call of DeleteSolarPanelData.
func (mr *MockSolarPanelDataServiceInterfaceMockRecorder) DeleteSolarPanelData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSolarPanelData", reflect.TypeOf((*MockSolarPanelDataServiceInterface)(nil).DeleteSolarPanelData), arg0)
}

// GetSolarPanelData mocks base method.
func (m *MockSolarPanelDataServiceInterface) GetSolarPanelData(arg0 string) (*domain.SolarPanelData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSolarPanelData", arg0)
	ret0, _ := ret[0].(*domain.SolarPanelData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSolarPanelData indicates an expected call of GetSolarPanelData.
func (mr *MockSolarPanelDataServiceInterfaceMockRecorder) GetSolarPanelData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSolarPanelData", reflect.TypeOf((*MockSolarPanelDataServiceInterface)(nil).GetSolarPanelData), arg0)
}

// UpdateSolarPanelData mocks base method.
func (m *MockSolarPanelDataServiceInterface) UpdateSolarPanelData(arg0 string, arg1 *domain.SolarPanelData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSolarPanelData", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSolarPanelData indicates an expected call of UpdateSolarPanelData.
func (mr *MockSolarPanelDataServiceInterfaceMockRecorder) UpdateSolarPanelData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSolarPanelData", reflect.TypeOf((*MockSolarPanelDataServiceInterface)(nil).UpdateSolarPanelData), arg0, arg1)
}
